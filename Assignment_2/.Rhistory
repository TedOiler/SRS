require(kdensity)
require(stats)
knitr::opts_chunk$set(echo = FALSE)
# Requirements and hyperparameters:
set.seed(1903)
n_small = 200
n_large = 1e6
U_small = runif(n_small)
U_large = runif(n_large)
hyp_bins_small  = 20
hyp_bins_large  = 30
hyp_norm_mean   = 0
hyp_norm_sd     = 1
hyp_gamma_shape = 5
hyp_gamma_rate  = 1
hyp_mixing      = 0.5
hyp_ban         = 'nrd0'
set.seed(1903)
n               = seq(100,2e3, by=50)
R               = 1000
hyp_mixing      = 0.5
hyp_norm_mean   = 0
hyp_norm_sd     = 1
hyp_gamma_shape = 5
hyp_gamma_rate  = 1
results = matrix(NA, length(n), 3)
for(i in 1:length(n)){
y_uni_normal         = matrix(NA, R, n[i])
y_uni_gamma          = matrix(NA, R, n[i])
y_multi_normal_gamma_0 = matrix(NA, R, n[i]/2)
y_multi_normal_gamma_1 = matrix(NA, R, n[i]/2)
y_multi_normal_gamma = matrix(NA, R, n[i])
# MCMC
for(r in 1:R){
y_uni_normal[r, ] = rnorm (n[i],mean=hyp_norm_mean,sd=hyp_norm_sd)
y_uni_gamma[r, ]  = rgamma(n[i],shape=hyp_gamma_shape,rate=hyp_gamma_rate)
y_multi_normal_gamma_0[r, ] = rnorm (n[i]/2,mean=hyp_norm_mean,sd=hyp_norm_sd)
y_multi_normal_gamma_1[r, ] = rgamma(n[i]/2,shape=hyp_gamma_shape,rate=hyp_gamma_rate)
}
y_multi_normal_gamma    = cbind(y_multi_normal_gamma_0,y_multi_normal_gamma_1)
MCMC_uni_normal         = colMeans(y_uni_normal)
MCMC_uni_gamma          = colMeans(y_uni_gamma)
MCMC_multi_normal_gamma = colMeans(y_multi_normal_gamma)
# h_normal       = bw.ucv(MCMC_uni_normal)
# h_gamma        = bw.ucv(MCMC_uni_gamma)
# h_normal_gamma = bw.ucv(MCMC_multi_normal_gamma)
MCMC_kde_uni_normal         = density(MCMC_uni_normal,
n=n[i],
bw='nrd0')
MCMC_kde_uni_gamma          = density(MCMC_uni_gamma,
n=n[i],
bw='nrd0')
MCMC_kde_multi_normal_gamma = density(MCMC_multi_normal_gamma,
n=n[i],
bw='nrd0')
# https://stats.stackexchange.com/questions/390777/how-to-compute-integrated-squared-error-for-kernel-density-estimation-in-r
MCMC_uni_normal_error         = splinefun(MCMC_kde_uni_normal$x,
(MCMC_kde_uni_normal$y-dnorm(MCMC_kde_uni_normal$x))^2)
ISE_uni_normal                = integrate(MCMC_uni_normal_error,
lower=min(MCMC_uni_normal),
upper=max(MCMC_uni_normal))
MCMC_uni_gamma_error          = splinefun(MCMC_kde_uni_gamma$x,
(MCMC_kde_uni_gamma$y-dnorm(MCMC_kde_uni_gamma$x))^2)
ISE_uni_gamma                 = integrate(MCMC_uni_gamma_error,
lower=min(MCMC_uni_gamma),
upper=max(MCMC_uni_gamma))
MCMC_multi_normal_gamma_error = splinefun(MCMC_kde_multi_normal_gamma$x,
(MCMC_kde_multi_normal_gamma$y-dnorm(MCMC_kde_multi_normal_gamma$x))^2)
ISE_multi_normal_gamma        = integrate(MCMC_multi_normal_gamma_error,
lower=min(MCMC_multi_normal_gamma),
upper=max(MCMC_multi_normal_gamma))
results[i,1] = ISE_uni_normal$value
results[i,2] = ISE_uni_gamma$value
results[i,3] = ISE_multi_normal_gamma$value
}
resutl_normal_250       = results[4,1]
resutl_normal_500       = results[9,1]
resutl_normal_1e3       = results[19,1]
resutl_gamma_250        = results[4,2]
resutl_gamma_500        = results[9,2]
resutl_gamma_1e3        = results[19,2]
resutl_normal_gamma_250 = results[4,3]
resutl_normal_gamma_500 = results[9,3]
resutl_normal_gamma_1e3 = results[19,3]
scaler=0.3
font=1.2
jpeg("./images/MISE error.jpg", width=4096*scaler, height=2160*scaler)
par(mfrow=c(3.5,1), mai=c(0.3,0.3,0.5,0.5))
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
plot(n,
results[,2],
main='MISE Gamma model',
ylab='MISE',
xlab=expression('n'),
ylim=c(3.4, 4.2),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_gamma_250,
c(round(resutl_gamma_250,2)),
pos=4,
cex=2)
text(x=500,
y=resutl_gamma_500,
c(round(resutl_gamma_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_gamma_1e3,
c(round(resutl_gamma_1e3,2)),
pos=2,
cex=2)
plot(n,
results[,3],
main='MISE Normal-Gamma model',
ylab='MISE',
xlab=expression('n'),
ylim=c(0, 0.18),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_gamma_250,
c(round(resutl_normal_gamma_250,2)),
adj = c(0,1),
cex=2)
text(x=500,
y=resutl_normal_gamma_500,
c(round(resutl_normal_gamma_1e3,2)),
adj = c(0,1),
cex=2)
text(x=1000,
y=resutl_normal_gamma_1e3,
c(round(resutl_normal_gamma_1e3,2)),
adj = c(0,1),
cex=2)
dev.off()
cat("\n###Script executed successfully!###")
round(resutl_normal_250,3)
round(resutl_normal_500 ,3)
round(resutl_normal_1e3  ,3)
round(resutl_gamma_250,3)
round(resutl_gamma_500   ,3)
round(resutl_gamma_1e3    ,3)
round(resutl_normal_gamma_250 ,3)
round(resutl_normal_gamma_500 ,3)
round(resutl_normal_gamma_1e3 ,3)
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
lines(plot(n,
results[,2]))
par(mfrow=c(3.5,1), mai=c(0.3,0.3,0.5,0.5))
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
lines(n,
results[,2])
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
lines(n,
results[,2])
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
points(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
ylim=c(7.2, 8.9),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
abline(v=250, col='red4', lwd=2.5)
abline(v=500, col='green4', lwd=2.5)
abline(v=1000, col='blue4', lwd=2.5)
text(x=250,
y=resutl_normal_250,
c(round(resutl_normal_250,2)),
adj = c(0,0),
cex=2)
text(x=500,
y=resutl_normal_500,
c(round(resutl_normal_1e3,2)),
adj = c(0,0),
cex=2)
text(x=1000,
y=resutl_normal_1e3,
c(round(resutl_normal_1e3,2)),
pos=2,
cex=2)
points(n,results[,2])
lines(n,results[,2],)
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
points(n,results[,2])
lines(n,results[,2])
plot(n,
results[,1],
main='MISE Normal model',
ylab='MISE',
xlab=expression('n'),
type='b',
lwd=2,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
points(n,results[,2], col="red", pch="*")
lines(n,results[,2], col="red",lty=2)
plot(n,
results[,1], type="o", col="blue", pch="o", lty=1,
cex.lab=font,
cex.axis=font,
cex.main=font,
cex.sub=font)
points(n,results[,2], col="red", pch="*")
lines(n,results[,2], col="red",lty=2)
xdata <- c(1,2,3,4,5,6,7)
y1 <- c(1,4,9,16,25,36,49)
y2 <- c(1, 5, 12, 21, 34, 51, 72)
y3 <- c(1, 6, 14, 28, 47, 73, 106 )
# plot the first curve by calling plot() function
# First curve is plotted
plot(xdata, y1, type="o", col="blue", pch="o", lty=1, ylim=c(0,110) )
# Add second curve to the same plot by calling points() and lines()
# Use symbol '*' for points.
points(xdata, y2, col="red", pch="*")
lines(xdata, y2, col="red",lty=2)
# Add Third curve to the same plot by calling points() and lines()
# Use symbol '+' for points.
points(xdata, y3, col="dark red",pch="+")
lines(xdata, y3, col="dark red", lty=3)
xdata <- n
y1 <- results[,1]
y2 <- results[,2]
y3 <- results[,3]
plot(xdata, y1, type="o", col="blue", pch="o", lty=1, ylim=c(0,110) )
points(xdata, y2, col="red", pch="*")
lines(xdata, y2, col="red",lty=2)
points(xdata, y3, col="dark red",pch="+")
lines(xdata, y3, col="dark red", lty=3)
xdata <- n
y1 <- results[,1]
y2 <- results[,2]
y3 <- results[,3]
plot(xdata, y1, type="o", col="blue", pch="o", lty=1, ylim=c(0,9) )
points(xdata, y2, col="red", pch="*")
lines(xdata, y2, col="red",lty=2)
points(xdata, y3, col="dark red",pch="+")
lines(xdata, y3, col="dark red", lty=3)
library(latticeExtra)
library(latticeExtra)
# create data
x <- n
var1 <- results[,1]
var2 <- results[,2]
var3 <- results[,3]
data <- data.frame(x,var1,var2,var3)
# --> construct separate plots for each series
obj1 <- xyplot(var1 ~ x, data, type = "l" , lwd=2, col="steelblue")
obj2 <- xyplot(var2 ~ x, data, type = "l", lwd=2, col="#69b3a2")
obj3 <- xyplot(var3 ~ x, data, type = "l", lwd=2, col="#69b3a2")
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, obj3, add.ylab2 = TRUE, use.style=FALSE )
x <- n
var1 <- results[,1]
var2 <- results[,2]
var3 <- results[,3]
data <- data.frame(x,var1,var2,var3)
# --> construct separate plots for each series
obj1 <- xyplot(var1 ~ x, data, type = "l" , lwd=2, col="steelblue")
obj2 <- xyplot(var2 ~ x, data, type = "l", lwd=2, col="#69b3a2")
obj3 <- xyplot(var3 ~ x, data, type = "l", lwd=2, col="#69b3a2")
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE, use.style=FALSE )
